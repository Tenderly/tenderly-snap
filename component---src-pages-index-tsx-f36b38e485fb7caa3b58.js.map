{"version":3,"file":"component---src-pages-index-tsx-f36b38e485fb7caa3b58.js","mappings":"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","sources":["webpack://@tenderly/metamask-snap-site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  updateTenderlyAccessKey,\n  sendTransaction,\n  sendTenderlyTransaction,\n  sendFailedTransaction,\n} from '../utils';\nimport {\n  InstallFlaskButton,\n  UpdateTenderlyAccessKeyButton,\n  SendSuccessfulTxButton,\n  SendTxButton,\n  SendFailedTxButton,\n  GoToDocsButton,\n  Card,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7rem;\n  margin-bottom: 7rem;\n  padding: 1.5rem;\n  gap: 2rem;\n\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst BoldText = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 1rem;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Title = styled.h3`\n  font-size: 24px;\n  font-weight: bold;\n  margin: 0;\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 2rem;\n\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 2rem;\n\n  ${({ theme }) => theme.mediaQueries.small} {\n    grid-template-columns: repeat(auto-fill, 100%);\n  }\n`;\n\nconst ExampleContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2rem;\n  margin-bottom: 2rem;\n  max-width: 60rem;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst PreContainer = styled.pre`\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border-radius: 4px;\n  word-break: break-all;\n  white-space: pre-wrap;\n`;\n\nconst successfulTxPayload = {\n  to: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  value: '0x0',\n  data: '0xa9059cbb000000000000000000000000fc43f5f9dd45258b3aff31bdbe6561d97e8b71de00000000000000000000000000000000000000000000000000000000004c4b40',\n};\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const handleSendTxClick = async () => {\n    try {\n      const txData = await sendTenderlyTransaction();\n      await sendTransaction(JSON.parse(txData));\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSendSuccessfulTxClick = async (txData: any) => {\n    try {\n      await sendTransaction(txData);\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSendFailedTxClick = async () => {\n    try {\n      await sendFailedTransaction();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleUpdateTenderlyAccessKeyClick = async () => {\n    try {\n      await updateTenderlyAccessKey();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>Tenderly Snap</Span>\n      </Heading>\n      <Subtitle>\n        Tenderly TX Preview allows you to see the exact transaction outcomes\n        before sending them on-chain using the Tenderly Simulation\n        Infrastructure.\n      </Subtitle>\n      {state.error && (\n        <ErrorMessage>\n          <b>An error happened:</b> {state.error.message}\n        </ErrorMessage>\n      )}\n      <CardContainer>\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              data: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n      </CardContainer>\n      <ExampleContainer>\n        <Title>Step 1</Title>\n        <Card\n          content={{\n            title: 'Add Tenderly Credentials',\n            description:\n              'Add Tenderly Account ID, Project ID and Access Token. Required to interact with Tenderly API.',\n            data: (\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '1rem',\n                  flexWrap: 'wrap',\n                }}\n              >\n                <UpdateTenderlyAccessKeyButton\n                  onClick={handleUpdateTenderlyAccessKeyClick}\n                  disabled={!state.installedSnap}\n                />\n                <GoToDocsButton />\n              </div>\n            ),\n          }}\n          disabled={!state.installedSnap}\n          fullWidth\n        />\n      </ExampleContainer>\n      <ExampleContainer>\n        <Title>Step 2</Title>\n        <CardContainer>\n          <Card\n            content={{\n              title: 'Send Successful Transaction',\n              description:\n                'Send a successful transaction with a predefined payload. It will be simulated using Tenderly Simulation API. Do not confirm it!',\n              data: (\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(2, 1fr)',\n                    gap: '1rem',\n                  }}\n                >\n                  <div>\n                    <BoldText>\n                      ERC20 Transfer - send 1 USDC to demo.eth\n                    </BoldText>\n                    <SendSuccessfulTxButton\n                      onClick={() =>\n                        handleSendSuccessfulTxClick({\n                          // ERC20 Transfer - sending 1 USDC to demo.eth\n                          to: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n                          value: '0x0',\n                          data: '0xa9059cbb000000000000000000000000fc43f5f9dd45258b3aff31bdbe6561d97e8b71de00000000000000000000000000000000000000000000000000000000000f4240',\n                        })\n                      }\n                      disabled={!state.installedSnap}\n                    />\n                  </div>\n                  <div>\n                    <BoldText>\n                      NFT Transfer - send 1 NFT to other address\n                    </BoldText>\n                    <SendSuccessfulTxButton\n                      onClick={() =>\n                        handleSendSuccessfulTxClick({\n                          // NFT Transfer - sending 1 NFT to other address\n                          to: '0x469823c7b84264d1bafbcd6010e9cdf1cac305a3',\n                          data: '0x23b872dd0000000000000000000000003ec7ef9b96a36faa0c0949a2ba804f60d12593dd000000000000000000000000b62369195f0c705bb1b9cf1e444df2502cbca1d50000000000000000000000000000000000000000000000000000000000000cd1',\n                        })\n                      }\n                      disabled={!state.installedSnap}\n                    />\n                  </div>\n                </div>\n              ),\n            }}\n            disabled={!state.installedSnap}\n            fullWidth\n          />\n          <Card\n            content={{\n              title: 'Send Failed Transaction',\n              description:\n                'Send a failed transaction with a predefined payload. It will be simulated using Tenderly Simulation API. Do not confirm it!',\n              data: (\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(2, 1fr)',\n                    gap: '1rem',\n                  }}\n                >\n                  <div>\n                    <BoldText>\n                      ERC20 Transfer - send 1,000,000 USDC to demo.eth\n                    </BoldText>\n                    <SendFailedTxButton\n                      onClick={handleSendFailedTxClick}\n                      disabled={!state.installedSnap}\n                    />\n                  </div>\n                </div>\n              ),\n            }}\n            disabled={!state.installedSnap}\n            fullWidth\n          />\n        </CardContainer>\n      </ExampleContainer>\n      <ExampleContainer>\n        <Title>Step 3</Title>\n        <Card\n          content={{\n            title: 'Send Any Transaction',\n            description:\n              'Send a transaction with a custom payload. It will be simulated using Tenderly Simulation API. Do not confirm it!',\n            data: (\n              <div>\n                <div>\n                  This example transaction payload will send{' '}\n                  <strong>5 USDC</strong> to demo.eth. Copy it and click on the{' '}\n                  <strong>Send Transaction</strong> button.\n                </div>\n                <PreContainer>\n                  {JSON.stringify(successfulTxPayload, null, 2)}\n                </PreContainer>\n                <SendTxButton\n                  onClick={handleSendTxClick}\n                  disabled={!state.installedSnap}\n                />\n              </div>\n            ),\n          }}\n          disabled={!state.installedSnap}\n          fullWidth\n        />\n      </ExampleContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","_ref","theme","mediaQueries","small","Heading","BoldText","Span","props","colors","primary","default","Title","Subtitle","_ref2","fontSizes","large","_ref3","_ref4","text","CardContainer","_ref5","ExampleContainer","ErrorMessage","_ref6","error","muted","_ref7","_ref8","alternative","_ref9","radii","_ref10","PreContainer","_ref11","background","successfulTxPayload","to","value","data","_useContext","useContext","MetaMaskContext","state","dispatch","handleSendTxClick","_ref12","_asyncToGenerator","_regeneratorRuntime","_callee","txData","_context","prev","next","sendTenderlyTransaction","sent","sendTransaction","JSON","parse","t0","console","type","MetamaskActions","payload","stop","apply","arguments","handleSendSuccessfulTxClick","_ref13","_callee2","_context2","_x","handleSendFailedTxClick","_ref14","_callee3","_context3","sendFailedTransaction","handleUpdateTenderlyAccessKeyClick","_ref15","_callee4","_context4","updateTenderlyAccessKey","_jsxs","children","_jsx","message","isFlask","Card","content","title","description","InstallFlaskButton","fullWidth","style","display","alignItems","gap","flexWrap","UpdateTenderlyAccessKeyButton","onClick","disabled","installedSnap","GoToDocsButton","gridTemplateColumns","SendSuccessfulTxButton","SendFailedTxButton","stringify","SendTxButton"],"sourceRoot":""}